{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","components/LogoutButton.js","components/Profile.js","App/App.js","serviceWorker.js","index.js"],"names":["TodoForm","addTodo","useState","task","completed","todo","setTodo","className","onSubmit","e","preventDefault","trim","console","log","TextField","label","type","name","value","onChange","target","Button","Todo","toggleComplete","removeTodo","ListItem","style","display","Checkbox","checked","onClick","_id","Typography","variant","textDecoration","IconButton","TodoList","todos","isAuthenticated","List","map","key","redirectUri","window","location","origin","indexOf","config","redirect","LogoutButton","logout","useAuth0","logoutParams","returnTo","Profile","user","src","picture","alt","padding","email","apiOrigin","App","todoItems","showResult","apiMessage","error","state","setState","getAccessTokenSilently","isLoading","loginWithPopup","getAccessTokenWithPopup","loginWithRedirect","useEffect","callApi","catch","JSON","stringify","a","token","fetch","headers","Authorization","response","status","statusText","json","responseData","undefined","message","handleLoginAgain","handleConsent","method","body","todoUpdated","filter","Alert","severity","color","Boolean","hostname","match","domain","clientId","scope","ReactDOM","render","authorizationParams","redirect_uri","audience","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96ef9622.chunk.js","sourcesContent":["import { Button, TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nconst TodoForm = ({ addTodo }) => {\n  const [todo, setTodo] = useState({\n    task: \"\",\n    completed: false\n  });\n\n  function handleTaskInputChange(e) {\n    // e.target.value contains new input from onChange\n    // event for input elements\n    setTodo({ ...todo, task: e.target.value });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault(); // prevents browser refresh\n    // trim() gets rid of string whitespace\n    if (todo.task.trim()) {\n      console.log('Add todo', todo)\n      addTodo(todo);\n      setTodo({ ...todo, task: \"\" });\n    }\n  }\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      <TextField\n        label=\"Task\"\n        type=\"text\"\n        name=\"task\"\n        value={todo.task}\n        onChange={handleTaskInputChange}\n      />\n      <Button type=\"submit\">Submit</Button>\n    </form>\n  );\n}\n\nexport default TodoForm;","import { Checkbox, IconButton, ListItem, Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React from \"react\";\n\nconst Todo = ({ todo, toggleComplete, removeTodo }) => {\n  function handleCheckboxClick() {\n    toggleComplete(todo._id);\n  }\n\n  function handleRemoveClick() {\n    removeTodo(todo._id);\n  }\n\n  return (\n    <ListItem style={{ display: \"flex\" }}>\n      <Checkbox checked={todo.completed} onClick={handleCheckboxClick} />\n      <Typography\n        variant=\"body1\"\n        style={{\n          textDecoration: todo.completed ? \"line-through\" : null\n        }}\n      >\n        {todo.task}\n      </Typography>\n      <IconButton onClick={handleRemoveClick}>\n        <CloseIcon />\n      </IconButton>\n    </ListItem>\n  );\n}\n\nexport default Todo;","import { List } from \"@material-ui/core\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ todos, removeTodo, toggleComplete, isAuthenticated }) => {  \n  return (\n    <List>\n      {todos.map(todo => (\n        <Todo\n          key={todo._id}\n          todo={todo}\n          removeTodo={removeTodo}\n          toggleComplete={toggleComplete}\n        />\n      ))}\n    </List>\n  );\n}\n\nexport default TodoList;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"@material-ui/core\";\nimport config from \"./../config.json\";\n\nconst redirectUri = window.location.origin.indexOf(\"localhost\") !== -1 ? window.location.origin : `${window.location.origin}${config.redirect}`;\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n\n  return (\n    <Button variant=\"text\" onClick={() => logout({ logoutParams: { returnTo: redirectUri } })}>\n      Log Out\n    </Button>\n  );\n};\n\nexport default LogoutButton;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Profile = () => {\n  const { user, isAuthenticated } = useAuth0();\n\n  return (\n    isAuthenticated && (\n      <div>\n        <img src={user.picture} alt={user.name} />\n        <Typography style={{ padding: 10 }} variant=\"subtitle1\">{user.name}</Typography>\n        <Typography style={{ padding: 10 }} variant=\"subtitle2\">{user.email}</Typography>\n      </div>\n    )\n  );\n};\n\nexport default Profile;","import Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport Alert from '@material-ui/lab/Alert';\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"../components/TodoForm\";\nimport TodoList from \"../components/TodoList\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport LoginButton from \"../components/LoginButton\";\nimport LogoutButton from \"../components/LogoutButton\";\nimport Profile from \"../components/Profile\";\nimport config from \"../config.json\";\n\nconst {apiOrigin} = config;\n\nfunction App() {\n  const [state, setState] = useState({\n    todoItems: [],\n    showResult: false,\n    apiMessage: \"\",\n    error: null,\n  });\n  const { user, isAuthenticated, isLoading, getAccessTokenSilently, loginWithPopup, loginWithRedirect, getAccessTokenWithPopup} = useAuth0();\n\n\n  useEffect(() => {\n    // fires when app component mounts to the DOM\n    console.log('init useEffect')\n    \n    callApi().catch(error => console.error('Init error', error))\n  }, []);\n\n  useEffect(() => {\n    // fires when todos array gets updated\n    console.log('update', JSON.stringify(state.todoItems))\n    \n  }, [state.todoItems]);\n  \n  const callApi = async () => {\n    try {\n      \n      const token = await getAccessTokenSilently();\n      const response = await fetch(`${apiOrigin}/dev/todo`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      console.log('Fetch data', response.status, response.statusText)\n      let responseData = await response.json();\n      console.log('Get data', responseData);\n      responseData = responseData.map((todo) => {\n        if (todo.completed === undefined) {\n          todo.completed = false;\n        }\n        return todo;\n      })\n      \n\n      if (responseData) {\n        setState({\n          ...state, todoItems: responseData,\n          error: null\n        });\n      }\n    } catch (error) {\n      console.error('API error', error)\n      setState({\n        ...state,\n        error: error.error || error.message\n      });\n    }\n  };\n\n  const handleLoginAgain = async () => {\n    try {\n      await loginWithPopup();\n      setState({\n        ...state,\n        error: null,\n      });\n    } catch (error) {\n      setState({\n        ...state,\n        error: error.error,\n      });\n    }\n\n    await callApi();\n  };\n\n  const handleConsent = async () => {\n    try {\n      await getAccessTokenWithPopup();\n      setState({\n        ...state,\n        error: null,\n      });\n    } catch (error) {\n      setState({\n        ...state,\n        error: error.error,\n      });\n    }\n\n    await callApi();\n  };\n\n  \n  const handle = (e, fn) => {\n    e.preventDefault();\n    fn();\n  };\n\n  async function addTodo(todo) {\n    // adds new todo to beginning of todos array  \n    \n    const token = await getAccessTokenSilently();\n    console.log('add', todo)\n    const response = await fetch(`${apiOrigin}/dev/todo`, {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(todo)\n    });\n    console.log('Post data', response.status, response.statusText)\n    let responseData = await response.json();\n    console.log('Post data response', responseData);\n    await callApi();\n  }\n\n  async function toggleComplete(_id) {\n    // find item\n    let todoUpdated = state.todoItems.filter(todo => {\n      return (todo._id === _id)\n    })\n    todoUpdated = todoUpdated[0]; // first item\n    todoUpdated.completed = !todoUpdated.completed;\n\n    const token = await getAccessTokenSilently();\n    console.log('add', todoUpdated)\n    const response = await fetch(`${apiOrigin}/dev/todo/${_id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(todoUpdated)\n    });\n    console.log('Put data', response.status, response.statusText)\n    let responseData = await response.json();\n    console.log('Put data response', responseData);\n    await callApi();\n  }\n\n  async function removeTodo(_id) {\n    const token = await getAccessTokenSilently();\n    console.log('delete', _id)\n    const response = await fetch(`${apiOrigin}/dev/todo/${_id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"content-type\": \"application/json\",\n      }\n    });\n    console.log('Delete data', response.status, response.statusText)\n    let responseData = await response.json();\n    console.log('Delete data response', responseData);\n    await callApi();\n  }\n\n  return (\n    <div className=\"App\">\n      <Typography style={{ padding: 10 }} variant=\"h2\">\n        React Todo\n      </Typography>\n      <Typography style={{ padding: 10 }} variant=\"subtitle1\">\n        Auth0.com authentication - Codehooks.io API Backend\n      </Typography>\n      \n      <Profile />\n\n      {state.error === \"login_required\" && (\n          <Alert severity=\"warning\">\n            Authentication required: <Button variant=\"text\" onClick={() => handleLoginAgain()}>Log In</Button>\n          </Alert>\n        )}\n        {state.error === \"consent_required\" && (\n          <Alert severity=\"warning\">\n            API concent required: <Button variant=\"text\" onClick={() => handleConsent()}>Grant</Button>            \n          </Alert>\n        )}\n      <TodoForm addTodo={addTodo} />\n      <TodoList\n        todos={isAuthenticated ? state.todoItems : []}\n        removeTodo={removeTodo}\n        toggleComplete={toggleComplete}\n        isAuthenticated={isAuthenticated}        \n      />\n      <div style={{ padding: 10 }}>\n        {isAuthenticated ? <LogoutButton /> : ''}\n      </div>\n      \n      {state.error !== null ?\n          <Typography style={{color: 'red'}} variant=\"subtitle1\">{state.error}</Typography>\n        : ''\n      }\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport config from \"./config.json\";\n\nconst domain = config.domain; //\"dev-nofd3nl3.us.auth0.com\";\nconst clientId = config.clientId;// \"NvtGSUYq2BFxX3L5kRnHFl6O6xALqt5y\";\nconst scope = config.scope; // \"read:current_user create:current_user_metadata profile email\"\n\n// hack to make it work with subdirectory for deployment on github pages\nconst redirectUri = window.location.origin.indexOf(\"localhost\") !== -1 ? window.location.origin : `${window.location.origin}${config.redirect}`;\n\nReactDOM.render(\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      authorizationParams={{\n        redirect_uri: redirectUri,\n        audience: `https://${domain}/api/v2/`,\n        scope: scope\n      }}\n    >\n      <App />\n    </Auth0Provider>,\n    document.getElementById(\"root\")\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}